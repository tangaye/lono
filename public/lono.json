{
	"openapi": "3.0.0",
	"info": {
		"title": "Lono SMS API",
		"description": "API to send SMS and view SMS that have been sent. To get a key or get support, kindly contact API Support. \n\n Example: curl -i -H 'Accept:application/json' -H 'apiKey:API_KEY' \\ https://developer.lonotalk.com/api/v1/sms",
		"version": "1.0",
		"contact": {
			"name": "API Support",
			"email": "tech@kwagei.com"
		}
	},

	"servers": [
		{
			"url": "https://developer.lonotalk.com/api/v1",
			"description": "Base URL"
		}
	],
	"paths": {
		"/sms": {
			"get": {
				"summary": "One-Way SMS: Fetch All",
				"description": "Returns SMS that have been sent.",
				"operationId": "sms",
				"responses": {
					"200": {
						"description": "An array of SMS",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 0,
									"messages": [
										{
											"smsId": "<smsId>",
											"recipient": "0776001001",
											"message": "Hello world!",
											"extMessageId": "<extMessageId>",
											"status": "delivered",
											"date": "2021-05-30T17:50:45.911Z",
											"sender": {
												"name": "ExampleInc"
											}
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Unauthorized. Invalid API key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "Unauthorized!"
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "An unexpected error occurred."
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "One-Way SMS: Send SMS",
				"description": "Makes a POST request to send SMS. **senderName** must be preconfigured to work. To configure senderName please contact API Support. \n\n Returns SMS sent if successful.",
				"operationId": "sendsms",
				"requestBody": {
					"description": "",

					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/sendsmsRequest"
							},
							"example": {
								"senderName": "Kwagei",

								"messages": [
									{
										"to": "0776001001",
										"body": "Hello world!",
										"extMessageId": "<extMessageId>"
									},
									{
										"to": "0886002002",
										"body": "Hello world!",
										"extMessageId": "<extMessageId>"
									}
								]
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "An array of SMS sent",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 0,
									"messages": [
										{
											"smsId": "<extMessageId>",
											"recipient": "231776001001",
											"message": "Hello world!",
											"extMessageId": "<extMessageId>",
											"status": "pending",
											"date": "2021-05-30T17:50:45.911Z",
											"sender": {
												"name": "ExampleInc"
											}
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "senderName not found",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "senderName: 'ExampleInc2' not configured."
								}
							}
						}
					},
					"403": {
						"description": "Unauthorized. Invalid API key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "Unauthorized!"
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "An unexpected error occured."
								}
							}
						}
					}
				}
			}
		},
		"/conversations": {
			"get": {
				"summary": "Two-Way SMS: Get All",
				"description": "Returns all two-way messages including messages sent and received.",
				"operationId": "conversations",
				"responses": {
					"200": {
						"description": "An array of two-way messages",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 0,
									"conversations": [
										{
											"id": "<conversation_id>",
											"from": "231777123456",
											"to": "231886123456",
											"message": "TEST 1",
											"status": "queued",
											"message_type": "incoming",
											"credits": 1,
											"user_id": "<user_id>",
											"created_at": "2023-03-07T18:47:59.753Z"
										},
										{
											"id": "<conversation_id>",
											"from": "231888123456",
											"to": "231777123456",
											"message": "TEST 2",
											"message_type": "outgoing",
											"status": "delivered",
											"credits": 3,
											"user_id": "<user_id>",
											"created_at": "2023-03-07T18:47:59.753Z"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Unauthorized. Invalid API key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "Unauthorized!"
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "An unexpected error occurred."
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Send Two-way SMS",
				"description": "Makes a POST request to send a two-way SMS using the pre-defined phone number. \n\n Returns the SMS sent if successful.",
				"operationId": "sendConversation",
				"requestBody": {
					"description": "",

					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/sendConversationRequest"
							},
							"example": {
								"to": "231555123456",
								"message": "Two-way TEST"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "An array of messages sent",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 0,
									"conversation": {
										"id": "<conversation_id>",
										"to": "231555123456",
										"message": "Two-way TEST",
										"user_id": "<user_id>",
										"status": "queued",
										"created_at": "2023-03-07T19:58:49.109Z",
										"credits": 1,
										"message_type": "outgoing"
									}
								}
							}
						}
					},

					"403": {
						"description": "Unauthorized. Invalid API key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "Unauthorized!"
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "An unexpected error occured."
								}
							}
						}
					}
				}
			}
		},
		"/conversations/latest": {
			"get": {
				"summary": "Two-Way SMS: Get Latest Incoming Messages",
				"description": "Returns all the most recent incoming two-way messages that have not yet been acknowledged.",
				"operationId": "latestConversations",
				"responses": {
					"200": {
						"description": "An array of latest received two-way messages",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 0,
									"conversations": [
										{
											"id": "<conversation_id>",
											"from": "231777123456",
											"to": "231886123456",
											"message": "TEST 1",
											"status": "queued",
											"message_type": "incoming",
											"credits": 1,
											"user_id": "<user_id>",
											"created_at": "2023-03-07T18:47:59.753Z"
										},
										{
											"id": "<conversation_id>",
											"from": "231555123456",
											"to": "231886123456",
											"message": "TEST 2",
											"status": "queued",
											"message_type": "incoming",
											"credits": 1,
											"user_id": "<user_id>",
											"created_at": "2023-03-07T18:47:59.753Z"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Unauthorized. Invalid API key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "Unauthorized!"
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "An unexpected error occurred."
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Two-Way SMS: Acknowledge Receipt",
				"description": "Makes a POST request to send acknowledgement of fetched incoming messages. \n\n Returns the message ids of the SMS received if successful and removes those messages from the next conversations/latest response",
				"operationId": "acknowledgeReceipt",
				"requestBody": {
					"description": "",

					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/latestConversations"
							},
							"example": {
								"conversation_ids": ["7fbdfc74-cd40-4a6b-8bdd-027acacc210e","384538e7-a810-40f5-afe6-ceb6e6ebf03d"]
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "An array of acknowledged conversation ids",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 0,
									"conversation_ids": ["<conversation_id1>","<conversation_id2>"]
								}
							}
						}
					},

					"403": {
						"description": "Unauthorized. Invalid API key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "Unauthorized!"
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "An unexpected error occured."
								}
							}
						}
					}
				}
			}
		},
		"/users/account": {
			"get": {
				"summary": "Get API user account details",
				"description": "Returns configured sender names, api key, and available SMS credits.",
				"operationId": "user",
				"responses": {
					"200": {
						"description": "API user account details",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 0,
									"user": {
										"id": "<id>",
										"name": "<name>",
										"apiKey": "<apikey>",
										"senderNames": [
											{
												"id": "<id>",
												"name": "<name>"
											}
										],
										"smsCredits": "200.93"
									}
								}
							}
						}
					},
					"403": {
						"description": "Unauthorized. Invalid API key",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "Unauthorized!"
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": {
									"errorCode": 1,
									"errorMessage": "An unexpected error occurred."
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"latestConversations": {
				"title": "latestConversations",
				"required": ["conversation_ids"],
				"type": "object",
				"properties": {
					"conversation_ids": {
						"type": "array",
						"description": "array of conversation ids"
					}
				},
				"example": {
					"conversation_ids": ["7fbdfc74-cd40-4a6b-8bdd-027acacc210e","384538e7-a810-40f5-afe6-ceb6e6ebf03d"]
				}
			},
			"sendConversationRequest": {
				"title": "sendConversationRequest",
				"required": ["senderName", "messages"],
				"type": "object",
				"properties": {
					"to": {
						"type": "string",
						"description": "msisdn number"
					},
					"message": {
						"type": "array",
						"description": "message for recipient"
					}
				},
				"example": {
					"to": "231776112223",
					"message": "Hello world!"
				}
			},
			"sendsmsRequest": {
				"title": "sendsmsRequest",
				"required": ["senderName", "messages"],
				"type": "object",
				"properties": {
					"senderName": {
						"type": "string"
					},
					"messages": {
						"type": "array",
						"items": {
							"type": "object"
						},
						"description": ""
					}
				},
				"example": {
					"senderName": "Kwagei",
					"messages": [
						{
							"to": "231776001001",
							"body": "Hello world!",
							"extMessageId": "<extMessageId>"
						},
						{
							"to": "231886002002",
							"body": "Hello world!",
							"extMessageId": "<extMessageId>"
						}
					]
				}
			}
		},
		"securitySchemes": {
			"ApiKeyAuth": {
				"type": "apiKey",
				"in": "header",
				"name": "apiKey"
			}
		}
	},
	"security": [
		{
			"ApiKeyAuth": []
		}
	],
	"tags": []
}
